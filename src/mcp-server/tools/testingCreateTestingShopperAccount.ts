/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { testingCreateTestingShopperAccount } from "../../funcs/testingCreateTestingShopperAccount.js";
import { CreateTestingShopperAccountRequest$zodSchema } from "../../models/createtestingshopperaccountop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: CreateTestingShopperAccountRequest$zodSchema.optional(),
};

export const tool$testingCreateTestingShopperAccount: ToolDefinition<
  typeof args
> = {
  name: "testing-create-testing-shopper-account",
  description: `Create Testing Shopper Account

Create a Bolt shopper account for testing purposes. Available for sandbox use only and the created  account will be recycled after a certain time.`,
  annotations: {
    "destructiveHint": false,
    "idempotentHint": false,
    "openWorldHint": false,
    "readOnlyHint": false,
  },
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await testingCreateTestingShopperAccount(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
