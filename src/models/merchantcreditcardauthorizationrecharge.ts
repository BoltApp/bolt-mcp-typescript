/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Address, Address$zodSchema } from "./address.js";
import { CartCreate, CartCreate$zodSchema } from "./cartcreate.js";
import {
  ProcessingInitiator,
  ProcessingInitiator$zodSchema,
} from "./processinginitiator.js";
import { UserIdentifier, UserIdentifier$zodSchema } from "./useridentifier.js";
import { UserIdentity, UserIdentity$zodSchema } from "./useridentity.js";

export const MerchantCreditCardAuthorizationRechargeSource$zodSchema = z.enum([
  "direct_payments",
]);

export type MerchantCreditCardAuthorizationRechargeSource = z.infer<
  typeof MerchantCreditCardAuthorizationRechargeSource$zodSchema
>;

/**
 * This request is used for authorizing an existing, saved card associated with the account.
 */
export type MerchantCreditCardAuthorizationRecharge = {
  auto_capture?: boolean | undefined;
  cart: CartCreate;
  credit_card_id: string;
  division_id: string;
  merchant_event_id?: string | undefined;
  previous_transaction_id?: string | null | undefined;
  processing_initiator?: ProcessingInitiator | undefined;
  shipping_address?: Address | undefined;
  source: MerchantCreditCardAuthorizationRechargeSource;
  user_identifier: UserIdentifier;
  user_identity: UserIdentity;
};

export const MerchantCreditCardAuthorizationRecharge$zodSchema: z.ZodType<
  MerchantCreditCardAuthorizationRecharge,
  z.ZodTypeDef,
  unknown
> = z.object({
  auto_capture: z.boolean().optional(),
  cart: CartCreate$zodSchema,
  credit_card_id: z.string(),
  division_id: z.string(),
  merchant_event_id: z.string().optional(),
  previous_transaction_id: z.string().nullable().optional(),
  processing_initiator: ProcessingInitiator$zodSchema.optional(),
  shipping_address: Address$zodSchema.optional(),
  source: MerchantCreditCardAuthorizationRechargeSource$zodSchema,
  user_identifier: UserIdentifier$zodSchema,
  user_identity: UserIdentity$zodSchema,
}).describe(
  "This request is used for authorizing an existing, saved card associated with the account.",
);
