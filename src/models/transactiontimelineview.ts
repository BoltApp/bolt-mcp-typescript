/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  AddressChangeView,
  AddressChangeView$zodSchema,
} from "./addresschangeview.js";
import { AmountView, AmountView$zodSchema } from "./amountview.js";
import {
  ConsumerSummaryView,
  ConsumerSummaryView$zodSchema,
} from "./consumersummaryview.js";
import {
  TransactionReviewView,
  TransactionReviewView$zodSchema,
} from "./transactionreviewview.js";
import {
  TransactionView,
  TransactionView$zodSchema,
} from "./transactionview.js";

export const TransactionTimelineViewType$zodSchema = z.enum([
  "completed",
  "authorized",
  "review",
  "note",
  "voided",
  "captured",
  "credited",
  "address_change",
]);

export type TransactionTimelineViewType = z.infer<
  typeof TransactionTimelineViewType$zodSchema
>;

export type TransactionTimelineView = {
  address_change?: AddressChangeView | undefined;
  amount?: AmountView | undefined;
  consumer?: ConsumerSummaryView | undefined;
  date?: number | undefined;
  note?: string | undefined;
  review?: TransactionReviewView | undefined;
  transaction?: TransactionView | undefined;
  type?: TransactionTimelineViewType | undefined;
  visibility?: string | undefined;
};

export const TransactionTimelineView$zodSchema: z.ZodType<
  TransactionTimelineView,
  z.ZodTypeDef,
  unknown
> = z.object({
  address_change: AddressChangeView$zodSchema.optional(),
  amount: AmountView$zodSchema.optional(),
  consumer: ConsumerSummaryView$zodSchema.optional(),
  date: z.number().optional(),
  note: z.string().optional(),
  review: TransactionReviewView$zodSchema.optional(),
  transaction: TransactionView$zodSchema.optional(),
  type: TransactionTimelineViewType$zodSchema.optional(),
  visibility: z.string().optional(),
});
