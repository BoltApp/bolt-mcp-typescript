/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  CartItemCustomization,
  CartItemCustomization$zodSchema,
} from "./cartitemcustomization.js";
import {
  CartItemGiftOption,
  CartItemGiftOption$zodSchema,
} from "./cartitemgiftoption.js";
import {
  CartItemProperty,
  CartItemProperty$zodSchema,
} from "./cartitemproperty.js";
import { CartShipment, CartShipment$zodSchema } from "./cartshipment.js";
import {
  ICartItemExternalInputs,
  ICartItemExternalInputs$zodSchema,
} from "./icartitemexternalinputs.js";

export const CartItemShipmentType$zodSchema = z.enum([
  "unknown",
  "door_delivery",
  "ship_to_store",
  "in_store_pickup",
]);

export type CartItemShipmentType = z.infer<
  typeof CartItemShipmentType$zodSchema
>;

export const CartItemType$zodSchema = z.enum([
  "unknown",
  "digital",
  "physical",
  "bundled",
]);

export type CartItemType = z.infer<typeof CartItemType$zodSchema>;

export type CartItem = {
  brand?: string | null | undefined;
  category?: string | null | undefined;
  collections?: Array<string> | undefined;
  color?: string | null | undefined;
  customizations?: Array<CartItemCustomization> | undefined;
  description?: string | null | undefined;
  details_url?: string | undefined;
  external_inputs?: ICartItemExternalInputs | undefined;
  gift_option?: CartItemGiftOption | undefined;
  image_url?: string | undefined;
  isbn?: string | null | undefined;
  item_group?: string | null | undefined;
  manufacturer?: string | null | undefined;
  merchant_product_id?: string | undefined;
  merchant_variant_id?: string | undefined;
  msrp?: number | null | undefined;
  name: string;
  options?: string | null | undefined;
  properties?: Array<CartItemProperty> | undefined;
  quantity: number;
  reference: string;
  shipment?: CartShipment | undefined;
  shipment_type?: CartItemShipmentType | undefined;
  size?: string | null | undefined;
  sku?: string | null | undefined;
  source?: string | null | undefined;
  seller_id?: string | null | undefined;
  tags?: string | null | undefined;
  tax_amount?: number | null | undefined;
  tax_code?: string | null | undefined;
  taxable?: boolean | null | undefined;
  total_amount: number;
  type?: CartItemType | undefined;
  unit_price: number;
  uom?: string | null | undefined;
  upc?: string | null | undefined;
  weight?: number | null | undefined;
  weight_unit?: string | null | undefined;
};

export const CartItem$zodSchema: z.ZodType<CartItem, z.ZodTypeDef, unknown> = z
  .object({
    brand: z.string().nullable().optional(),
    category: z.string().nullable().optional(),
    collections: z.array(z.string()).optional(),
    color: z.string().nullable().optional(),
    customizations: z.array(CartItemCustomization$zodSchema).optional(),
    description: z.string().nullable().optional(),
    details_url: z.string().optional(),
    external_inputs: ICartItemExternalInputs$zodSchema.optional(),
    gift_option: CartItemGiftOption$zodSchema.optional(),
    image_url: z.string().optional(),
    isbn: z.string().nullable().optional(),
    item_group: z.string().nullable().optional(),
    manufacturer: z.string().nullable().optional(),
    merchant_product_id: z.string().optional(),
    merchant_variant_id: z.string().optional(),
    msrp: z.number().nullable().optional(),
    name: z.string(),
    options: z.string().nullable().optional(),
    properties: z.array(CartItemProperty$zodSchema).optional(),
    quantity: z.number(),
    reference: z.string(),
    seller_id: z.string().nullable().optional(),
    shipment: CartShipment$zodSchema.optional(),
    shipment_type: CartItemShipmentType$zodSchema.optional(),
    size: z.string().nullable().optional(),
    sku: z.string().nullable().optional(),
    source: z.string().nullable().optional(),
    tags: z.string().nullable().optional(),
    tax_amount: z.number().nullable().optional(),
    tax_code: z.string().nullable().optional(),
    taxable: z.boolean().nullable().optional(),
    total_amount: z.number(),
    type: CartItemType$zodSchema.optional(),
    unit_price: z.number(),
    uom: z.string().nullable().optional(),
    upc: z.string().nullable().optional(),
    weight: z.number().nullable().optional(),
    weight_unit: z.string().nullable().optional(),
  });
