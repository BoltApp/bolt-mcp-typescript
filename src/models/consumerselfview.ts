/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { EmailView, EmailView$zodSchema } from "./emailview.js";
import { LoginView, LoginView$zodSchema } from "./loginview.js";
import { PhoneView, PhoneView$zodSchema } from "./phoneview.js";

export const PlatformAccountStatus$zodSchema = z.enum([
  "none",
  "linked",
  "unlinked",
]);

export type PlatformAccountStatus = z.infer<
  typeof PlatformAccountStatus$zodSchema
>;

export type ConsumerSelfView = {
  first_name?: string | undefined;
  id?: string | undefined;
  last_name?: string | undefined;
  authentication?: LoginView | undefined;
  email_verified?: boolean | undefined;
  emails?: Array<EmailView> | undefined;
  phones?: Array<PhoneView> | undefined;
  platform_account_status?: PlatformAccountStatus | undefined;
};

export const ConsumerSelfView$zodSchema: z.ZodType<
  ConsumerSelfView,
  z.ZodTypeDef,
  unknown
> = z.object({
  authentication: LoginView$zodSchema.optional(),
  email_verified: z.boolean().optional(),
  emails: z.array(EmailView$zodSchema).optional(),
  first_name: z.string().optional(),
  id: z.string().optional(),
  last_name: z.string().optional(),
  phones: z.array(PhoneView$zodSchema).optional(),
  platform_account_status: PlatformAccountStatus$zodSchema.optional(),
});
