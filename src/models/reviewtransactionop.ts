/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ErrorsBoltApiResponse,
  ErrorsBoltApiResponse$zodSchema,
} from "./errorsboltapiresponse.js";
import {
  MerchantCreditCardReview,
  MerchantCreditCardReview$zodSchema,
} from "./merchantcreditcardreview.js";
import {
  TransactionDetailsView,
  TransactionDetailsView$zodSchema,
} from "./transactiondetailsview.js";

export type ReviewTransactionRequest = {
  idempotencyKey?: string | undefined;
  merchant_credit_card_review?: MerchantCreditCardReview | undefined;
};

export const ReviewTransactionRequest$zodSchema: z.ZodType<
  ReviewTransactionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  idempotencyKey: z.string().describe(
    "A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/).",
  ).optional(),
  merchant_credit_card_review: MerchantCreditCardReview$zodSchema.optional(),
});

export type ReviewTransactionResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  transaction_details_view?: TransactionDetailsView | undefined;
  errors_bolt_api_response?: ErrorsBoltApiResponse | undefined;
};

export const ReviewTransactionResponse$zodSchema: z.ZodType<
  ReviewTransactionResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  errors_bolt_api_response: ErrorsBoltApiResponse$zodSchema.optional(),
  transaction_details_view: TransactionDetailsView$zodSchema.optional(),
});
