/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type RiskModelExternalResultView = {
  available?: boolean | undefined;
  decision_factors?: Array<string> | undefined;
  fraud_probability?: number | undefined;
  payment_instrument_factors?: { [k: string]: string } | undefined;
};

export const RiskModelExternalResultView$zodSchema: z.ZodType<
  RiskModelExternalResultView,
  z.ZodTypeDef,
  unknown
> = z.object({
  available: z.boolean().optional(),
  decision_factors: z.array(z.string()).optional(),
  fraud_probability: z.number().optional(),
  payment_instrument_factors: z.record(z.string()).optional(),
});
