/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  AddressChangeRequestMetadataView,
  AddressChangeRequestMetadataView$zodSchema,
} from "./addresschangerequestmetadataview.js";
import { AmountView, AmountView$zodSchema } from "./amountview.js";
import {
  AuthorizationVerificationStatus,
  AuthorizationVerificationStatus$zodSchema,
} from "./authorizationverificationstatus.js";
import { CaptureView, CaptureView$zodSchema } from "./captureview.js";
import {
  ChargebackDetails,
  ChargebackDetails$zodSchema,
} from "./chargebackdetails.js";
import {
  ConsumerSelfView,
  ConsumerSelfView$zodSchema,
} from "./consumerselfview.js";
import {
  ConsumerUserMembership,
  ConsumerUserMembership$zodSchema,
} from "./consumerusermembership.js";
import { Credit, Credit$zodSchema } from "./credit.js";
import {
  CreditCardAuthorizationView,
  CreditCardAuthorizationView$zodSchema,
} from "./creditcardauthorizationview.js";
import { CreditCardUser, CreditCardUser$zodSchema } from "./creditcarduser.js";
import { CreditCardView, CreditCardView$zodSchema } from "./creditcardview.js";
import {
  CreditCardVoidView,
  CreditCardVoidView$zodSchema,
} from "./creditcardvoidview.js";
import {
  CustomerListStatus,
  CustomerListStatus$zodSchema,
} from "./customerliststatus.js";
import { CustomFields, CustomFields$zodSchema } from "./customfields.js";
import { ManualDisputes, ManualDisputes$zodSchema } from "./manualdisputes.js";
import { Merchant, Merchant$zodSchema } from "./merchant.js";
import {
  MerchantDivision,
  MerchantDivision$zodSchema,
} from "./merchantdivision.js";
import { OrderDecision, OrderDecision$zodSchema } from "./orderdecision.js";
import { OrderView, OrderView$zodSchema } from "./orderview.js";
import { ReviewTicket, ReviewTicket$zodSchema } from "./reviewticket.js";
import {
  RiskInsightsYml,
  RiskInsightsYml$zodSchema,
} from "./riskinsightsyml.js";
import {
  RiskReviewStatus,
  RiskReviewStatus$zodSchema,
} from "./riskreviewstatus.js";
import { SplitsView, SplitsView$zodSchema } from "./splitsview.js";
import {
  TransactionIndemnificationDecision,
  TransactionIndemnificationDecision$zodSchema,
} from "./transactionindemnificationdecision.js";
import {
  TransactionIndemnificationReason,
  TransactionIndemnificationReason$zodSchema,
} from "./transactionindemnificationreason.js";
import {
  TransactionProcessor,
  TransactionProcessor$zodSchema,
} from "./transactionprocessor.js";
import {
  TransactionRejectionDetailsView,
  TransactionRejectionDetailsView$zodSchema,
} from "./transactionrejectiondetailsview.js";
import {
  TransactionStatus,
  TransactionStatus$zodSchema,
} from "./transactionstatus.js";
import {
  TransactionTimelineView,
  TransactionTimelineView$zodSchema,
} from "./transactiontimelineview.js";
import {
  TransactionType,
  TransactionType$zodSchema,
} from "./transactiontype.js";
import {
  TransactionView,
  TransactionView$zodSchema,
} from "./transactionview.js";

/**
 * Transaction Details Retrieved
 *
 * @remarks
 */
export type TransactionDetails = {
  address_change_request_metadata?:
    | AddressChangeRequestMetadataView
    | undefined;
  adjust_transactions?: Array<TransactionView> | undefined;
  amount?: AmountView | undefined;
  auth_verification_status?: AuthorizationVerificationStatus | undefined;
  authorization?: CreditCardAuthorizationView | undefined;
  authorization_id?: string | undefined;
  capture?: CaptureView | undefined;
  captures?: Array<CaptureView> | undefined;
  chargeback_details?: ChargebackDetails | undefined;
  credit?: Credit | undefined;
  custom_fields?: CustomFields | undefined;
  customer_list_status?: CustomerListStatus | undefined;
  date?: number | undefined;
  from_consumer?: CreditCardUser | undefined;
  from_consumer_membership_users?: ConsumerUserMembership | undefined;
  from_credit_card?: CreditCardView | undefined;
  id?: string | undefined;
  indemnification_decision?: TransactionIndemnificationDecision | undefined;
  indemnification_reason?: TransactionIndemnificationReason | undefined;
  last_viewed_utc?: number | undefined;
  last4?: string | undefined;
  manual_disputes?: ManualDisputes | undefined;
  merchant?: Merchant | undefined;
  merchant_division?: MerchantDivision | undefined;
  merchant_order_number?: string | undefined;
  order?: OrderView | undefined;
  order_decision?: OrderDecision | undefined;
  platform_metadata?: { [k: string]: string } | undefined;
  processor?: TransactionProcessor | undefined;
  reference?: string | undefined;
  refund_transaction_ids?: Array<string> | undefined;
  refund_transactions?: Array<TransactionView> | undefined;
  refunded_amount?: AmountView | undefined;
  review_ticket?: ReviewTicket | undefined;
  risk_insights?: RiskInsightsYml | undefined;
  risk_review_status?: RiskReviewStatus | undefined;
  risk_score?: number | undefined;
  source_transaction?: TransactionView | undefined;
  splits?: Array<SplitsView> | undefined;
  status?: TransactionStatus | undefined;
  timeline?: TransactionTimelineView | undefined;
  to_consumer?: ConsumerSelfView | undefined;
  to_credit_card?: CreditCardView | undefined;
  transaction_properties?: { [k: string]: string } | undefined;
  transaction_rejection_details?: TransactionRejectionDetailsView | undefined;
  type?: TransactionType | undefined;
  view_status?: string | undefined;
  void?: CreditCardVoidView | undefined;
  void_cause?: string | undefined;
};

export const TransactionDetails$zodSchema: z.ZodType<
  TransactionDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  address_change_request_metadata: AddressChangeRequestMetadataView$zodSchema
    .optional(),
  adjust_transactions: z.array(TransactionView$zodSchema).optional(),
  amount: AmountView$zodSchema.optional(),
  auth_verification_status: AuthorizationVerificationStatus$zodSchema
    .optional(),
  authorization: CreditCardAuthorizationView$zodSchema.optional(),
  authorization_id: z.string().optional(),
  capture: CaptureView$zodSchema.optional(),
  captures: z.array(CaptureView$zodSchema).optional(),
  chargeback_details: ChargebackDetails$zodSchema.optional(),
  credit: Credit$zodSchema.optional(),
  custom_fields: CustomFields$zodSchema.optional(),
  customer_list_status: CustomerListStatus$zodSchema.optional(),
  date: z.number().int().optional(),
  from_consumer: CreditCardUser$zodSchema.optional(),
  from_consumer_membership_users: ConsumerUserMembership$zodSchema.optional(),
  from_credit_card: CreditCardView$zodSchema.optional(),
  id: z.string().optional(),
  indemnification_decision: TransactionIndemnificationDecision$zodSchema
    .optional(),
  indemnification_reason: TransactionIndemnificationReason$zodSchema.optional(),
  last4: z.string().optional(),
  last_viewed_utc: z.number().int().optional(),
  manual_disputes: ManualDisputes$zodSchema.optional(),
  merchant: Merchant$zodSchema.optional(),
  merchant_division: MerchantDivision$zodSchema.optional(),
  merchant_order_number: z.string().optional(),
  order: OrderView$zodSchema.optional(),
  order_decision: OrderDecision$zodSchema.optional(),
  platform_metadata: z.record(z.string()).optional(),
  processor: TransactionProcessor$zodSchema.optional(),
  reference: z.string().optional(),
  refund_transaction_ids: z.array(z.string()).optional(),
  refund_transactions: z.array(TransactionView$zodSchema).optional(),
  refunded_amount: AmountView$zodSchema.optional(),
  review_ticket: ReviewTicket$zodSchema.optional(),
  risk_insights: RiskInsightsYml$zodSchema.optional(),
  risk_review_status: RiskReviewStatus$zodSchema.optional(),
  risk_score: z.number().int().optional(),
  source_transaction: TransactionView$zodSchema.optional(),
  splits: z.array(SplitsView$zodSchema).optional(),
  status: TransactionStatus$zodSchema.optional(),
  timeline: TransactionTimelineView$zodSchema.optional(),
  to_consumer: ConsumerSelfView$zodSchema.optional(),
  to_credit_card: CreditCardView$zodSchema.optional(),
  transaction_properties: z.record(z.string()).optional(),
  transaction_rejection_details: TransactionRejectionDetailsView$zodSchema
    .optional(),
  type: TransactionType$zodSchema.optional(),
  view_status: z.string().optional(),
  void: CreditCardVoidView$zodSchema.optional(),
  void_cause: z.string().optional(),
}).describe(
  "Transaction Details Retrieved\n"
    + "",
);
