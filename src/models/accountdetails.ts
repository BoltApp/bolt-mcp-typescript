/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  AccountDetailsAddressView,
  AccountDetailsAddressView$zodSchema,
} from "./accountdetailsaddressview.js";
import { ProfileView, ProfileView$zodSchema } from "./profileview.js";
import {
  SavedCreditCardView,
  SavedCreditCardView$zodSchema,
} from "./savedcreditcardview.js";
import {
  SavedPaypalAccountView,
  SavedPaypalAccountView$zodSchema,
} from "./savedpaypalaccountview.js";

export type PaymentMethod = SavedCreditCardView | SavedPaypalAccountView;

export const PaymentMethod$zodSchema: z.ZodType<
  PaymentMethod,
  z.ZodTypeDef,
  unknown
> = z.union([
  SavedCreditCardView$zodSchema,
  SavedPaypalAccountView$zodSchema,
]);

export type AccountDetails = {
  addresses?: Array<AccountDetailsAddressView> | undefined;
  has_bolt_account?: boolean | undefined;
  payment_methods?:
    | Array<SavedCreditCardView | SavedPaypalAccountView>
    | undefined;
  profile?: ProfileView | undefined;
};

export const AccountDetails$zodSchema: z.ZodType<
  AccountDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  addresses: z.array(AccountDetailsAddressView$zodSchema).optional(),
  has_bolt_account: z.boolean().optional(),
  payment_methods: z.array(z.union([
    SavedCreditCardView$zodSchema,
    SavedPaypalAccountView$zodSchema,
  ])).optional(),
  profile: ProfileView$zodSchema.optional(),
});
