/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  RiskDecisionFactorYml,
  RiskDecisionFactorYml$zodSchema,
} from "./riskdecisionfactoryml.js";

/**
 * Displays fraud decisioning insights based on key factors. This information can either be forwarded via a `risk_insights` transaction webhook type or be polled by sending a `GET` request to Bolt's [transactions endpoint](/api-bolt/#operation/transaction-details).
 *
 * @remarks
 */
export type RiskInsightsYml = {
  available?: boolean | undefined;
  decision_factors?: Array<RiskDecisionFactorYml> | undefined;
  fraud_probability?: number | undefined;
  payment_instrument_factors?: { [k: string]: string } | undefined;
};

export const RiskInsightsYml$zodSchema: z.ZodType<
  RiskInsightsYml,
  z.ZodTypeDef,
  unknown
> = z.object({
  available: z.boolean().optional(),
  decision_factors: z.array(RiskDecisionFactorYml$zodSchema).optional(),
  fraud_probability: z.number().int().optional(),
  payment_instrument_factors: z.record(z.string()).optional(),
}).describe(
  "Displays fraud decisioning insights based on key factors. This information can either be forwarded via a `risk_insights` transaction webhook type or be polled by sending a `GET` request to Bolt's [transactions endpoint](/api-bolt/#operation/transaction-details).\n"
    + "",
);
