/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { AmountView, AmountView$zodSchema } from "./amountview.js";
import {
  ChargebackEventView,
  ChargebackEventView$zodSchema,
} from "./chargebackeventview.js";

export const RepresentmentResult$zodSchema = z.enum([
  "none",
  "open",
  "lost",
  "won",
]);

export type RepresentmentResult = z.infer<typeof RepresentmentResult$zodSchema>;

export type ChargebackDetailsView = {
  amt_won?: AmountView | undefined;
  chargeback_amt?: AmountView | undefined;
  chargeback_fee?: AmountView | undefined;
  chargeback_id?: string | undefined;
  event_views?: Array<ChargebackEventView> | undefined;
  net_amt?: AmountView | undefined;
  reason?: string | undefined;
  reason_code?: string | undefined;
  representment_reply_by_date?: number | undefined;
  representment_result?: RepresentmentResult | undefined;
};

export const ChargebackDetailsView$zodSchema: z.ZodType<
  ChargebackDetailsView,
  z.ZodTypeDef,
  unknown
> = z.object({
  amt_won: AmountView$zodSchema.optional(),
  chargeback_amt: AmountView$zodSchema.optional(),
  chargeback_fee: AmountView$zodSchema.optional(),
  chargeback_id: z.string().optional(),
  event_views: z.array(ChargebackEventView$zodSchema).optional(),
  net_amt: AmountView$zodSchema.optional(),
  reason: z.string().optional(),
  reason_code: z.string().optional(),
  representment_reply_by_date: z.number().optional(),
  representment_result: RepresentmentResult$zodSchema.optional(),
});
