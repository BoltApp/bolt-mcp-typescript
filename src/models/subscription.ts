/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The unit for this subscription's frequency.
 */
export const Unit$zodSchema = z.enum([
  "day",
  "week",
  "month",
  "year",
]).describe("The unit for this subscription's frequency.");

export type Unit = z.infer<typeof Unit$zodSchema>;

/**
 * Describes how often the subscription recurs.
 */
export type Frequency = { unit?: Unit | undefined; value?: number | undefined };

export const Frequency$zodSchema: z.ZodType<Frequency, z.ZodTypeDef, unknown> =
  z.object({
    unit: Unit$zodSchema.optional(),
    value: z.number().int().optional(),
  }).describe("Describes how often the subscription recurs.");

/**
 * Describes a product added as a recurring subscription.
 */
export type Subscription = { frequency?: Frequency | undefined };

export const Subscription$zodSchema: z.ZodType<
  Subscription,
  z.ZodTypeDef,
  unknown
> = z.object({
  frequency: z.lazy(() => Frequency$zodSchema).optional(),
}).describe("Describes a product added as a recurring subscription.");
