/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ErrorsBoltApiResponse,
  ErrorsBoltApiResponse$zodSchema,
} from "./errorsboltapiresponse.js";
import { V1AccountsView, V1AccountsView$zodSchema } from "./v1accountsview.js";

export type DetectAccountRequest = {
  email?: string | undefined;
  sha256_email?: string | undefined;
  phone?: string | undefined;
  xPublishableKey: string;
};

export const DetectAccountRequest$zodSchema: z.ZodType<
  DetectAccountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string().describe(
    "The shopper's email address is the primary mechanism for detecting an account. You **must** provide either a value for this parameter or for `sha256_email`.",
  ).optional(),
  phone: z.string().describe(
    "The shopper's phone number. Includes country code (e.g. +1); does not include dashes or spaces. Can be used to detect an account instead of `sha256_email` or `email`.",
  ).optional(),
  sha256_email: z.string().describe(
    "The sha256 hash of the shopper's normalized email address can be used to detect an account instead of `email`.",
  ).optional(),
  xPublishableKey: z.string().describe(
    "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard.",
  ),
});

export type DetectAccountResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  v1_accounts_view?: V1AccountsView | undefined;
  errors_bolt_api_response?: ErrorsBoltApiResponse | undefined;
};

export const DetectAccountResponse$zodSchema: z.ZodType<
  DetectAccountResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  errors_bolt_api_response: ErrorsBoltApiResponse$zodSchema.optional(),
  v1_accounts_view: V1AccountsView$zodSchema.optional(),
});
