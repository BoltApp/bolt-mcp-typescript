/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { AccountDetails, AccountDetails$zodSchema } from "./accountdetails.js";
import {
  CreateAccountInput,
  CreateAccountInput$zodSchema,
} from "./createaccountinput.js";

export type CreateAccountRequest = {
  xPublishableKey?: string | undefined;
  idempotencyKey?: string | undefined;
  create_account_input?: CreateAccountInput | undefined;
};

export const CreateAccountRequest$zodSchema: z.ZodType<
  CreateAccountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  create_account_input: CreateAccountInput$zodSchema.optional(),
  idempotencyKey: z.string().describe(
    "A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/).",
  ).optional(),
  xPublishableKey: z.string().describe(
    "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
  ).optional(),
});

export type CreateAccountResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  account_details?: AccountDetails | undefined;
};

export const CreateAccountResponse$zodSchema: z.ZodType<
  CreateAccountResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  account_details: AccountDetails$zodSchema.optional(),
});
