/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Address, Address$zodSchema } from "./address.js";
import { CartAddOn, CartAddOn$zodSchema } from "./cartaddon.js";
import { CartDiscount, CartDiscount$zodSchema } from "./cartdiscount.js";
import { CartFee, CartFee$zodSchema } from "./cartfee.js";
import { CartItem, CartItem$zodSchema } from "./cartitem.js";
import {
  CartLoyaltyRewards,
  CartLoyaltyRewards$zodSchema,
} from "./cartloyaltyrewards.js";
import { CartShipment, CartShipment$zodSchema } from "./cartshipment.js";
import { Fulfillment, Fulfillment$zodSchema } from "./fulfillment.js";
import {
  InStoreCartShipment,
  InStoreCartShipment$zodSchema,
} from "./instorecartshipment.js";
import { IOrderMetadata, IOrderMetadata$zodSchema } from "./iordermetadata.js";
import { SellerSplit, SellerSplit$zodSchema } from "./sellersplit.js";

/**
 * The cart_create object is a composite of the base_cart object and additional order details.
 */
export type Cart = {
  add_ons?: Array<CartAddOn> | undefined;
  billing_address?: Address | undefined;
  discounts?: Array<CartDiscount> | undefined;
  fees?: Array<CartFee> | undefined;
  fulfillments?: Array<Fulfillment> | undefined;
  in_store_cart_shipments?: Array<InStoreCartShipment> | undefined;
  items?: Array<CartItem> | undefined;
  loyalty_rewards?: Array<CartLoyaltyRewards> | undefined;
  shipments?: Array<CartShipment> | undefined;
  tax_amount?: number | undefined;
  total_amount: number;
  cart_url?: string | undefined;
  currency: string;
  display_id?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  order_description?: string | undefined;
  order_reference: string;
};

export const Cart$zodSchema: z.ZodType<Cart, z.ZodTypeDef, unknown> = z.object({
  add_ons: z.array(CartAddOn$zodSchema).optional(),
  billing_address: Address$zodSchema.optional(),
  cart_url: z.string().optional(),
  currency: z.string(),
  discounts: z.array(CartDiscount$zodSchema).optional(),
  display_id: z.string().optional(),
  fees: z.array(CartFee$zodSchema).optional(),
  fulfillments: z.array(Fulfillment$zodSchema).optional(),
  in_store_cart_shipments: z.array(InStoreCartShipment$zodSchema).optional(),
  items: z.array(CartItem$zodSchema).optional(),
  loyalty_rewards: z.array(CartLoyaltyRewards$zodSchema).optional(),
  metadata: z.record(z.string()).optional(),
  order_description: z.string().optional(),
  order_reference: z.string(),
  shipments: z.array(CartShipment$zodSchema).optional(),
  tax_amount: z.number().optional(),
  total_amount: z.number(),
}).describe(
  "The cart_create object is a composite of the base_cart object and additional order details.",
);

/**
 * Used to determine the channel from which the order was created.
 */
export const Channel$zodSchema = z.enum([
  "browser",
  "mobile_app",
]).describe("Used to determine the channel from which the order was created.");

export type Channel = z.infer<typeof Channel$zodSchema>;

export type OrderCreate = {
  cart: Cart;
  channel: Channel;
  create_cart_on_merchant_backend?: boolean | null | undefined;
  metadata?: IOrderMetadata | null | undefined;
  user_note?: string | undefined;
  seller_splits?: Array<SellerSplit> | null | undefined;
};

export const OrderCreate$zodSchema: z.ZodType<
  OrderCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  cart: z.lazy(() => Cart$zodSchema),
  channel: Channel$zodSchema,
  create_cart_on_merchant_backend: z.boolean().nullable().optional(),
  metadata: IOrderMetadata$zodSchema.nullable().optional(),
  seller_splits: z.array(SellerSplit$zodSchema).nullable().optional(),
  user_note: z.string().optional(),
});
