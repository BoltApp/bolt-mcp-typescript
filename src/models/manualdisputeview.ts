/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const ManualDisputeViewStatus$zodSchema = z.enum([
  "pending",
  "approved",
  "denied",
]);

export type ManualDisputeViewStatus = z.infer<
  typeof ManualDisputeViewStatus$zodSchema
>;

export type ManualDisputeView = {
  amount?: number | undefined;
  currency?: string | undefined;
  delivery_evidence?: string | undefined;
  delivery_link?: string | undefined;
  dispute_evidence?: string | undefined;
  dispute_link?: string | undefined;
  other_evidence?: Array<string> | undefined;
  other_link?: Array<string> | undefined;
  reason?: string | undefined;
  status?: ManualDisputeViewStatus | undefined;
};

export const ManualDisputeView$zodSchema: z.ZodType<
  ManualDisputeView,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.number().optional(),
  currency: z.string().optional(),
  delivery_evidence: z.string().optional(),
  delivery_link: z.string().optional(),
  dispute_evidence: z.string().optional(),
  dispute_link: z.string().optional(),
  other_evidence: z.array(z.string()).optional(),
  other_link: z.array(z.string()).optional(),
  reason: z.string().optional(),
  status: ManualDisputeViewStatus$zodSchema.optional(),
});
