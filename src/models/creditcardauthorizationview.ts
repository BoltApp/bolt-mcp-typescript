/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  CreditCardAuthorizationReason,
  CreditCardAuthorizationReason$zodSchema,
} from "./creditcardauthorizationreason.js";
import {
  CreditCardAuthorizationStatus,
  CreditCardAuthorizationStatus$zodSchema,
} from "./creditcardauthorizationstatus.js";

export const AvsResponse$zodSchema = z.enum([
  "00",
  "01",
  "02",
  "10",
  "11",
  "12",
  "13",
  "14",
  "20",
  "30",
  "31",
  "32",
  "33",
  "34",
  "40",
  "adyen_",
  "adyen_A",
  "adyen_N",
  "adyen_U",
  "adyen_S",
  "adyen_R",
  "adyen_W",
  "adyen_T",
  "adyen_Z",
  "adyen_D",
  "adyen_F",
  "adyen_M",
  "adyen_X",
  "adyen_Y",
  "adyen_B",
  "adyen_P",
  "adyen_C",
  "adyen_G",
  "adyen_I",
  "adyen_K",
]);

export type AvsResponse = z.infer<typeof AvsResponse$zodSchema>;

export const CvvResponse$zodSchema = z.enum([
  "M",
  "N",
  "P",
  "S",
  "U",
  "D",
  "X",
  "Y",
  "1",
  "2",
  "3",
  "pass",
  "fail",
  "unavailable",
  "unchecked",
  "braintree_M",
  "braintree_N",
  "braintree_U",
  "braintree_B",
  "braintree_A",
  "braintree_I",
  "braintree_S",
  "CVV2",
]);

export type CvvResponse = z.infer<typeof CvvResponse$zodSchema>;

export const Processor$zodSchema = z.enum([
  "vantiv",
  "adyen_payfac",
  "adyen_gateway",
  "stripe",
  "braintree",
  "cybersource",
  "nmi",
  "authorize_net",
  "radial",
  "shopify_payments",
  "rocketgate",
]);

export type Processor = z.infer<typeof Processor$zodSchema>;

export type CreditCardAuthorizationView = {
  auth?: string | undefined;
  avs_response?: AvsResponse | undefined;
  cvv_response?: CvvResponse | undefined;
  merchant_event_id?: string | undefined;
  metadata?: { [k: string]: string } | undefined;
  processor?: Processor | undefined;
  reason?: CreditCardAuthorizationReason | undefined;
  status?: CreditCardAuthorizationStatus | undefined;
};

export const CreditCardAuthorizationView$zodSchema: z.ZodType<
  CreditCardAuthorizationView,
  z.ZodTypeDef,
  unknown
> = z.object({
  auth: z.string().optional(),
  avs_response: AvsResponse$zodSchema.optional(),
  cvv_response: CvvResponse$zodSchema.optional(),
  merchant_event_id: z.string().optional(),
  metadata: z.record(z.string()).optional(),
  processor: Processor$zodSchema.optional(),
  reason: CreditCardAuthorizationReason$zodSchema.optional(),
  status: CreditCardAuthorizationStatus$zodSchema.optional(),
});
