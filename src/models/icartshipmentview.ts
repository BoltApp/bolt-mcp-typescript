/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { AddressView, AddressView$zodSchema } from "./addressview.js";
import { AmountView, AmountView$zodSchema } from "./amountview.js";
import { GiftOptionView, GiftOptionView$zodSchema } from "./giftoptionview.js";
import {
  IDescriptionPart,
  IDescriptionPart$zodSchema,
} from "./idescriptionpart.js";
import {
  IDescriptionTooltip,
  IDescriptionTooltip$zodSchema,
} from "./idescriptiontooltip.js";
import { IWeight, IWeight$zodSchema } from "./iweight.js";

export type ICartShipmentViewPackageDimension = {
  depth?: number | undefined;
  height?: number | undefined;
  unit?: string | undefined;
  width?: number | undefined;
};

export const ICartShipmentViewPackageDimension$zodSchema: z.ZodType<
  ICartShipmentViewPackageDimension,
  z.ZodTypeDef,
  unknown
> = z.object({
  depth: z.number().optional(),
  height: z.number().optional(),
  unit: z.string().optional(),
  width: z.number().optional(),
});

export type ICartShipmentView = {
  carrier?: string | undefined;
  cost?: AmountView | undefined;
  default?: boolean | undefined;
  description?: Array<IDescriptionPart> | undefined;
  description_tooltips?: Array<IDescriptionTooltip> | undefined;
  estimated_delivery_date?: string | undefined;
  expedited?: boolean | undefined;
  gift_options?: GiftOptionView | undefined;
  id?: string | undefined;
  package_dimension?: ICartShipmentViewPackageDimension | undefined;
  package_type?: string | undefined;
  package_weight?: IWeight | undefined;
  reference?: string | undefined;
  service?: string | undefined;
  shipping_address?: AddressView | undefined;
  shipping_method?: string | undefined;
  signature?: string | undefined;
  tax_amount?: AmountView | undefined;
  total_weight?: IWeight | undefined;
  type?: string | undefined;
};

export const ICartShipmentView$zodSchema: z.ZodType<
  ICartShipmentView,
  z.ZodTypeDef,
  unknown
> = z.object({
  carrier: z.string().optional(),
  cost: AmountView$zodSchema.optional(),
  default: z.boolean().optional(),
  description: z.array(IDescriptionPart$zodSchema).optional(),
  description_tooltips: z.array(IDescriptionTooltip$zodSchema).optional(),
  estimated_delivery_date: z.string().datetime({ offset: true }).optional(),
  expedited: z.boolean().optional(),
  gift_options: GiftOptionView$zodSchema.optional(),
  id: z.string().optional(),
  package_dimension: z.lazy(() => ICartShipmentViewPackageDimension$zodSchema)
    .optional(),
  package_type: z.string().optional(),
  package_weight: IWeight$zodSchema.optional(),
  reference: z.string().optional(),
  service: z.string().optional(),
  shipping_address: AddressView$zodSchema.optional(),
  shipping_method: z.string().optional(),
  signature: z.string().optional(),
  tax_amount: AmountView$zodSchema.optional(),
  total_weight: IWeight$zodSchema.optional(),
  type: z.string().optional(),
});
