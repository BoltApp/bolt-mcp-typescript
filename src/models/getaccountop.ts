/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { AccountDetails, AccountDetails$zodSchema } from "./accountdetails.js";

export type GetAccountSecurity = { OAuth: string; xAPIKey: string };

export const GetAccountSecurity$zodSchema: z.ZodType<
  GetAccountSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  OAuth: z.string().describe(
    "Bolt utilizes the OAuth flow that developers can use to attain access to Bolt Account data via APIs.\n"
      + "For all APIs that require authorization, please provide your `access_token` returned from `/v1/oauth/token` via the basic auth bearer header `Authorization: bearer ${TOKEN}`.\n"
      + "[Read more about the OAuth token endpoint.](/api-bolt/#tag/OAuth)\n"
      + "",
  ),
  xAPIKey: z.string().describe(
    "Admins and Developers can obtain their Bolt API key from the Bolt Merchant Dashboard.",
  ),
});

export type GetAccountRequest = { xPublishableKey?: string | undefined };

export const GetAccountRequest$zodSchema: z.ZodType<
  GetAccountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  xPublishableKey: z.string().describe(
    "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
  ).optional(),
});

export type GetAccountResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  account_details?: AccountDetails | undefined;
};

export const GetAccountResponse$zodSchema: z.ZodType<
  GetAccountResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  account_details: AccountDetails$zodSchema.optional(),
});
