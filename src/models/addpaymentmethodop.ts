/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Address, Address$zodSchema } from "./address.js";
import {
  SavedCreditCardView,
  SavedCreditCardView$zodSchema,
} from "./savedcreditcardview.js";
import {
  ShopperMetadata,
  ShopperMetadata$zodSchema,
} from "./shoppermetadata.js";

export type AddPaymentMethodSecurity = { OAuth: string; xAPIKey: string };

export const AddPaymentMethodSecurity$zodSchema: z.ZodType<
  AddPaymentMethodSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  OAuth: z.string().describe(
    "Bolt utilizes the OAuth flow that developers can use to attain access to Bolt Account data via APIs.\n"
      + "For all APIs that require authorization, please provide your `access_token` returned from `/v1/oauth/token` via the basic auth bearer header `Authorization: bearer ${TOKEN}`.\n"
      + "[Read more about the OAuth token endpoint.](/api-bolt/#tag/OAuth)\n"
      + "",
  ),
  xAPIKey: z.string().describe(
    "Admins and Developers can obtain their Bolt API key from the Bolt Merchant Dashboard.",
  ),
});

export const AddPaymentMethodNetwork$zodSchema = z.enum([
  "visa",
  "mastercard",
  "amex",
  "discover",
  "dinersclub",
  "jcb",
  "unionpay",
  "alliancedata",
  "citiplcc",
  "unknown",
]);

export type AddPaymentMethodNetwork = z.infer<
  typeof AddPaymentMethodNetwork$zodSchema
>;

/**
 * Used to indicate the card's priority. '1' indicates primary, while '2' indicates a secondary card.
 *
 * @remarks
 */
export const AddPaymentMethodPriority$zodSchema = z.union([
  z.literal(1),
  z.literal(2),
]).describe(
  "Used to indicate the card's priority. '1' indicates primary, while '2' indicates a secondary card.\n"
    + "",
);

export type AddPaymentMethodPriority = z.infer<
  typeof AddPaymentMethodPriority$zodSchema
>;

/**
 * Used to define which payment processor generated the token for this credit card.  For those using Bolt's tokenizer, the value must be `bolt`.
 *
 * @remarks
 */
export const AddPaymentMethodTokenType$zodSchema = z.enum([
  "vantiv",
  "applepay",
  "bolt",
  "stripe",
  "plcc",
]).describe(
  "Used to define which payment processor generated the token for this credit card.  For those using Bolt's tokenizer, the value must be `bolt`.\n"
    + "",
);

export type AddPaymentMethodTokenType = z.infer<
  typeof AddPaymentMethodTokenType$zodSchema
>;

/**
 * The `credit_card` object is used to to pay for guest checkout transactions or save payment method details to an account. Once saved, you can reference the credit card with the associated `credit_card_id` for future transactions.
 *
 * @remarks
 */
export type AddPaymentMethodRequestBody = {
  billing_address: Address;
  billing_address_id?: string | null | undefined;
  bin?: string | undefined;
  cryptogram?: string | undefined;
  eci?: string | undefined;
  expiration: string;
  last4?: string | undefined;
  metadata?: ShopperMetadata | null | undefined;
  network?: AddPaymentMethodNetwork | undefined;
  number?: string | undefined;
  postal_code?: string | undefined;
  priority?: AddPaymentMethodPriority | undefined;
  save?: boolean | undefined;
  token: string;
  token_type?: AddPaymentMethodTokenType | undefined;
  currency?: string | undefined;
};

export const AddPaymentMethodRequestBody$zodSchema: z.ZodType<
  AddPaymentMethodRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  billing_address: Address$zodSchema,
  billing_address_id: z.string().nullable().optional(),
  bin: z.string().optional(),
  cryptogram: z.string().optional(),
  currency: z.string().optional(),
  eci: z.string().optional(),
  expiration: z.string(),
  last4: z.string().optional(),
  metadata: ShopperMetadata$zodSchema.nullable().optional(),
  network: AddPaymentMethodNetwork$zodSchema.optional(),
  number: z.string().optional(),
  postal_code: z.string().optional(),
  priority: AddPaymentMethodPriority$zodSchema.optional(),
  save: z.boolean().optional(),
  token: z.string(),
  token_type: AddPaymentMethodTokenType$zodSchema.optional(),
}).describe(
  "The `credit_card` object is used to to pay for guest checkout transactions or save payment method details to an account. Once saved, you can reference the credit card with the associated `credit_card_id` for future transactions.\n"
    + "",
);

export type AddPaymentMethodRequest = {
  xPublishableKey?: string | undefined;
  idempotencyKey?: string | undefined;
  RequestBody?: AddPaymentMethodRequestBody | undefined;
};

export const AddPaymentMethodRequest$zodSchema: z.ZodType<
  AddPaymentMethodRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  RequestBody: z.lazy(() => AddPaymentMethodRequestBody$zodSchema).optional(),
  idempotencyKey: z.string().describe(
    "A key created by merchants that ensures `POST` and `PATCH` requests are only performed once. [Read more about Idempotent Requests here](/developers/references/idempotency/).",
  ).optional(),
  xPublishableKey: z.string().describe(
    "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
  ).optional(),
});

export type AddPaymentMethodResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  saved_credit_card_view?: SavedCreditCardView | undefined;
};

export const AddPaymentMethodResponse$zodSchema: z.ZodType<
  AddPaymentMethodResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  saved_credit_card_view: SavedCreditCardView$zodSchema.optional(),
});
