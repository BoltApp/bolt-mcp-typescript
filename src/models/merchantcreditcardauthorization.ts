/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Address, Address$zodSchema } from "./address.js";
import { CartCreate, CartCreate$zodSchema } from "./cartcreate.js";
import { CreditCard, CreditCard$zodSchema } from "./creditcard.js";
import { UserIdentifier, UserIdentifier$zodSchema } from "./useridentifier.js";
import { UserIdentity, UserIdentity$zodSchema } from "./useridentity.js";

/**
 * Determines who initiated the transaction (e.g. shopper, merchant) and how they did it (e.g. recurring subscription, on-file card).
 *
 * @remarks
 *
 * * `initial_card_on_file` - The first transaction made for a card. The system then saves this card for future transactions.
 * * `initial_recurring` - The first time any card is used to pay for a recurring charge. For example, a subscription.
 * * `stored_cardholder_initiated` - The subsequent (second, third, etc.) transactions a shopper initiates with a stored card. This includes every situation during which a cardholder requests a charge, for example if the cardholder requests a merchant charge their card.
 * * `stored_merchant_initiated` - The subsequent (second, third, etc.) transactions a merchant initiates with a stored card only when the cardholder does not request the charge. For example, when a customer service representative buys on behalf of a shopper or when a business adds funds to a public transit card.
 * * `following_recurring` - The subsequent (second, third, etc.) transactions  a card is used to pay for a recurring charge. For example, a subscription.
 * * `cardholder_initiated` - When a cardholder begins a transaction that isn’t stored in Bolt and won’t be stored in Bolt for future transactions.
 * * `recurring` - Any time a card is used to pay for a recurring charge (for example, a subscription). Only use this value when you don’t know if it’s the first recurring charge.
 */
export const MerchantCreditCardAuthorizationProcessingInitiator$zodSchema = z
  .enum([
    "initial_card_on_file",
    "initial_recurring",
    "stored_cardholder_initiated",
    "stored_merchant_initiated",
    "following_recurring",
    "cardholder_initiated",
    "recurring",
  ]).describe(
    "Determines who initiated the transaction (e.g. shopper, merchant) and how they did it (e.g. recurring subscription, on-file card).\n"
      + "\n"
      + "* `initial_card_on_file` - The first transaction made for a card. The system then saves this card for future transactions.\n"
      + "* `initial_recurring` - The first time any card is used to pay for a recurring charge. For example, a subscription.\n"
      + "* `stored_cardholder_initiated` - The subsequent (second, third, etc.) transactions a shopper initiates with a stored card. This includes every situation during which a cardholder requests a charge, for example if the cardholder requests a merchant charge their card.\n"
      + "* `stored_merchant_initiated` - The subsequent (second, third, etc.) transactions a merchant initiates with a stored card only when the cardholder does not request the charge. For example, when a customer service representative buys on behalf of a shopper or when a business adds funds to a public transit card.\n"
      + "* `following_recurring` - The subsequent (second, third, etc.) transactions  a card is used to pay for a recurring charge. For example, a subscription.\n"
      + "* `cardholder_initiated` - When a cardholder begins a transaction that isn’t stored in Bolt and won’t be stored in Bolt for future transactions.\n"
      + "* `recurring` - Any time a card is used to pay for a recurring charge (for example, a subscription). Only use this value when you don’t know if it’s the first recurring charge.\n"
      + "",
  );

export type MerchantCreditCardAuthorizationProcessingInitiator = z.infer<
  typeof MerchantCreditCardAuthorizationProcessingInitiator$zodSchema
>;

export const MerchantCreditCardAuthorizationSource$zodSchema = z.enum([
  "direct_payments",
]);

export type MerchantCreditCardAuthorizationSource = z.infer<
  typeof MerchantCreditCardAuthorizationSource$zodSchema
>;

/**
 * This request is used for authorizing a new, unsaved card.
 */
export type MerchantCreditCardAuthorization = {
  auto_capture?: boolean | undefined;
  cart: CartCreate;
  create_bolt_account: boolean;
  credit_card: CreditCard;
  division_id: string;
  merchant_event_id?: string | undefined;
  previous_transaction_id?: string | null | undefined;
  processing_initiator?:
    | MerchantCreditCardAuthorizationProcessingInitiator
    | undefined;
  shipping_address?: Address | undefined;
  source: MerchantCreditCardAuthorizationSource;
  user_identifier: UserIdentifier;
  user_identity: UserIdentity;
};

export const MerchantCreditCardAuthorization$zodSchema: z.ZodType<
  MerchantCreditCardAuthorization,
  z.ZodTypeDef,
  unknown
> = z.object({
  auto_capture: z.boolean().optional(),
  cart: CartCreate$zodSchema,
  create_bolt_account: z.boolean(),
  credit_card: CreditCard$zodSchema,
  division_id: z.string(),
  merchant_event_id: z.string().optional(),
  previous_transaction_id: z.string().nullable().optional(),
  processing_initiator:
    MerchantCreditCardAuthorizationProcessingInitiator$zodSchema.optional(),
  shipping_address: Address$zodSchema.optional(),
  source: MerchantCreditCardAuthorizationSource$zodSchema,
  user_identifier: UserIdentifier$zodSchema,
  user_identity: UserIdentity$zodSchema,
}).describe("This request is used for authorizing a new, unsaved card.");
