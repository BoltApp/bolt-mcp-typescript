/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of OAuth 2.0 grant being utilized.
 *
 * @remarks
 *
 * The value will always be `refresh_token` when exchanging a refresh token for an access token.
 */
export const OAuthTokenInputRefreshGrantType$zodSchema = z.enum([
  "refresh_token",
]).describe(
  "The type of OAuth 2.0 grant being utilized. \n"
    + "\n"
    + "The value will always be `refresh_token` when exchanging a refresh token for an access token.\n"
    + "",
);

export type OAuthTokenInputRefreshGrantType = z.infer<
  typeof OAuthTokenInputRefreshGrantType$zodSchema
>;

export type OAuthTokenInputRefresh = {
  client_id: string;
  client_secret: string;
  grant_type: OAuthTokenInputRefreshGrantType;
  refresh_token: string;
  scope: string;
  state?: string | undefined;
};

export const OAuthTokenInputRefresh$zodSchema: z.ZodType<
  OAuthTokenInputRefresh,
  z.ZodTypeDef,
  unknown
> = z.object({
  client_id: z.string(),
  client_secret: z.string(),
  grant_type: OAuthTokenInputRefreshGrantType$zodSchema,
  refresh_token: z.string(),
  scope: z.string(),
  state: z.string().optional(),
});
