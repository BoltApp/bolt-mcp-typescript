/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  MerchantDivisionLogoView,
  MerchantDivisionLogoView$zodSchema,
} from "./merchantdivisionlogoview.js";

export const HookType$zodSchema = z.enum([
  "1",
  "2",
  "3",
  "4",
  "5",
  "6",
]);

export type HookType = z.infer<typeof HookType$zodSchema>;

export type MerchantDivisionSummaryView = {
  account_page_url?: string | undefined;
  api_base_domain_url?: string | undefined;
  base_domain_url?: string | undefined;
  confirmation_redirect_url?: string | undefined;
  create_order_url?: string | undefined;
  debug_url?: string | undefined;
  description?: string | undefined;
  display_name?: string | undefined;
  get_account_url?: string | undefined;
  shopper_custom_fields_updated_url?: string | undefined;
  hook_type?: HookType | undefined;
  hook_url?: string | undefined;
  id?: string | undefined;
  is_universal_merchant_api?: boolean | undefined;
  is_webhooks_v2?: boolean | undefined;
  logo?: MerchantDivisionLogoView | undefined;
  logo_dashboard?: MerchantDivisionLogoView | undefined;
  merchant_id?: string | undefined;
  mobile_app_domain_url?: string | undefined;
  oauth_logout_url?: string | undefined;
  oauth_redirect_url?: string | undefined;
  platform?: string | undefined;
  plugin_config_url?: string | undefined;
  privacy_policy_url?: string | undefined;
  product_info_url?: string | undefined;
  public_id?: string | undefined;
  remote_apiurl?: string | undefined;
  shipping_and_tax_url?: string | undefined;
  shipping_url?: string | undefined;
  status?: string | undefined;
  tax_url?: string | undefined;
  terms_of_service_url?: string | undefined;
  universal_merchant_api_url?: string | undefined;
  update_cart_url?: string | undefined;
  use_async_refunds_amazon_pay?: boolean | undefined;
  use_async_refunds_paypal?: boolean | undefined;
  validate_additional_account_data_url?: string | undefined;
  merchant_password_login_url?: string | undefined;
};

export const MerchantDivisionSummaryView$zodSchema: z.ZodType<
  MerchantDivisionSummaryView,
  z.ZodTypeDef,
  unknown
> = z.object({
  account_page_url: z.string().optional(),
  api_base_domain_url: z.string().optional(),
  base_domain_url: z.string().optional(),
  confirmation_redirect_url: z.string().optional(),
  create_order_url: z.string().optional(),
  debug_url: z.string().optional(),
  description: z.string().optional(),
  display_name: z.string().optional(),
  get_account_url: z.string().optional(),
  hook_type: HookType$zodSchema.optional(),
  hook_url: z.string().optional(),
  id: z.string().optional(),
  is_universal_merchant_api: z.boolean().optional(),
  is_webhooks_v2: z.boolean().optional(),
  logo: MerchantDivisionLogoView$zodSchema.optional(),
  logo_dashboard: MerchantDivisionLogoView$zodSchema.optional(),
  merchant_id: z.string().optional(),
  merchant_password_login_url: z.string().optional(),
  mobile_app_domain_url: z.string().optional(),
  oauth_logout_url: z.string().optional(),
  oauth_redirect_url: z.string().optional(),
  platform: z.string().optional(),
  plugin_config_url: z.string().optional(),
  privacy_policy_url: z.string().optional(),
  product_info_url: z.string().optional(),
  public_id: z.string().optional(),
  remote_apiurl: z.string().optional(),
  shipping_and_tax_url: z.string().optional(),
  shipping_url: z.string().optional(),
  shopper_custom_fields_updated_url: z.string().optional(),
  status: z.string().optional(),
  tax_url: z.string().optional(),
  terms_of_service_url: z.string().optional(),
  universal_merchant_api_url: z.string().optional(),
  update_cart_url: z.string().optional(),
  use_async_refunds_amazon_pay: z.boolean().optional(),
  use_async_refunds_paypal: z.boolean().optional(),
  validate_additional_account_data_url: z.string().optional(),
});
