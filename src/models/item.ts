/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { Amounts, Amounts$zodSchema } from "./amounts.js";
import { ItemProperty, ItemProperty$zodSchema } from "./itemproperty.js";
import {
  ItemShipmentType,
  ItemShipmentType$zodSchema,
} from "./itemshipmenttype.js";
import {
  MetadataComponent,
  MetadataComponent$zodSchema,
} from "./metadatacomponent.js";
import { TotalWeight, TotalWeight$zodSchema } from "./totalweight.js";
import { Type, Type$zodSchema } from "./type.js";

export type Customization = {
  attributes: MetadataComponent;
  name: string;
  price: Amounts;
};

export const Customization$zodSchema: z.ZodType<
  Customization,
  z.ZodTypeDef,
  unknown
> = z.object({
  attributes: MetadataComponent$zodSchema,
  name: z.string(),
  price: Amounts$zodSchema,
});

/**
 * An item with properties.
 */
export type Item = {
  bolt_product_id?: string | undefined;
  brand?: string | undefined;
  category?: string | undefined;
  collections?: Array<string> | undefined;
  color?: string | undefined;
  customizations?: Array<Customization> | undefined;
  description?: string | undefined;
  details_url?: string | undefined;
  image_url?: string | undefined;
  isbn?: string | undefined;
  item_group?: string | undefined;
  manufacturer?: string | undefined;
  name: string;
  options?: string | undefined;
  properties?: Array<ItemProperty> | undefined;
  quantity: number;
  reference: string;
  shipment_type?: ItemShipmentType | undefined;
  size?: string | undefined;
  sku?: string | undefined;
  tags?: string | undefined;
  tax_amount?: Amounts | undefined;
  taxable?: boolean | undefined;
  total_amount: Amounts;
  type?: Type | undefined;
  unit_price: Amounts;
  uom?: string | undefined;
  upc?: string | undefined;
  weight?: TotalWeight | undefined;
};

export const Item$zodSchema: z.ZodType<Item, z.ZodTypeDef, unknown> = z.object({
  bolt_product_id: z.string().optional(),
  brand: z.string().optional(),
  category: z.string().optional(),
  collections: z.array(z.string()).optional(),
  color: z.string().optional(),
  customizations: z.array(z.lazy(() => Customization$zodSchema)).optional(),
  description: z.string().optional(),
  details_url: z.string().optional(),
  image_url: z.string().optional(),
  isbn: z.string().optional(),
  item_group: z.string().optional(),
  manufacturer: z.string().optional(),
  name: z.string(),
  options: z.string().optional(),
  properties: z.array(ItemProperty$zodSchema).optional(),
  quantity: z.number().int(),
  reference: z.string(),
  shipment_type: ItemShipmentType$zodSchema.optional(),
  size: z.string().optional(),
  sku: z.string().optional(),
  tags: z.string().optional(),
  tax_amount: Amounts$zodSchema.optional(),
  taxable: z.boolean().optional(),
  total_amount: Amounts$zodSchema,
  type: Type$zodSchema.optional(),
  unit_price: Amounts$zodSchema,
  uom: z.string().optional(),
  upc: z.string().optional(),
  weight: TotalWeight$zodSchema.optional(),
}).describe("An item with properties.");
