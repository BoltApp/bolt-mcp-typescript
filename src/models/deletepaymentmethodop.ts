/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ErrorsBoltApiResponse,
  ErrorsBoltApiResponse$zodSchema,
} from "./errorsboltapiresponse.js";

export type DeletePaymentMethodSecurity = { OAuth: string; xAPIKey: string };

export const DeletePaymentMethodSecurity$zodSchema: z.ZodType<
  DeletePaymentMethodSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  OAuth: z.string().describe(
    "Bolt utilizes the OAuth flow that developers can use to attain access to Bolt Account data via APIs.\n"
      + "For all APIs that require authorization, please provide your `access_token` returned from `/v1/oauth/token` via the basic auth bearer header `Authorization: bearer ${TOKEN}`.\n"
      + "[Read more about the OAuth token endpoint.](/api-bolt/#tag/OAuth)\n"
      + "",
  ),
  xAPIKey: z.string().describe(
    "Admins and Developers can obtain their Bolt API key from the Bolt Merchant Dashboard.",
  ),
});

export type DeletePaymentMethodRequest = {
  payment_method_id: string;
  xPublishableKey?: string | undefined;
};

export const DeletePaymentMethodRequest$zodSchema: z.ZodType<
  DeletePaymentMethodRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  payment_method_id: z.string().describe(
    "The ID for a payment method in the shopper's Bolt account Wallet. This ID can be obtained using [Get Account Details](#tag/Account/operation/GetAccountDetails).",
  ),
  xPublishableKey: z.string().describe(
    "The publicly viewable identifier used to identify a merchant division. This key is found in the Developer > API section of the Bolt Merchant Dashboard [RECOMMENDED].",
  ).optional(),
});

export type DeletePaymentMethodResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  errors_bolt_api_response?: ErrorsBoltApiResponse | undefined;
};

export const DeletePaymentMethodResponse$zodSchema: z.ZodType<
  DeletePaymentMethodResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  errors_bolt_api_response: ErrorsBoltApiResponse$zodSchema.optional(),
});
