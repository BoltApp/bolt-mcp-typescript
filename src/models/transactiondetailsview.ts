/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  AddressChangeRequestMetadataView,
  AddressChangeRequestMetadataView$zodSchema,
} from "./addresschangerequestmetadataview.js";
import { AmountView, AmountView$zodSchema } from "./amountview.js";
import {
  AuthRejectionDetailsView,
  AuthRejectionDetailsView$zodSchema,
} from "./authrejectiondetailsview.js";
import { CaptureView, CaptureView$zodSchema } from "./captureview.js";
import {
  ChargebackDetailsView,
  ChargebackDetailsView$zodSchema,
} from "./chargebackdetailsview.js";
import {
  ConsumerSelfView,
  ConsumerSelfView$zodSchema,
} from "./consumerselfview.js";
import {
  CreditCardAuthorizationView,
  CreditCardAuthorizationView$zodSchema,
} from "./creditcardauthorizationview.js";
import {
  CreditCardCaptureView,
  CreditCardCaptureView$zodSchema,
} from "./creditcardcaptureview.js";
import {
  CreditCardCreditView,
  CreditCardCreditView$zodSchema,
} from "./creditcardcreditview.js";
import { CreditCardView, CreditCardView$zodSchema } from "./creditcardview.js";
import {
  CreditCardVoidView,
  CreditCardVoidView$zodSchema,
} from "./creditcardvoidview.js";
import {
  CustomerListStatus,
  CustomerListStatus$zodSchema,
} from "./customerliststatus.js";
import {
  CustomFieldFullResponseView,
  CustomFieldFullResponseView$zodSchema,
} from "./customfieldfullresponseview.js";
import {
  ManualDisputeView,
  ManualDisputeView$zodSchema,
} from "./manualdisputeview.js";
import {
  MerchantDivisionSummaryView,
  MerchantDivisionSummaryView$zodSchema,
} from "./merchantdivisionsummaryview.js";
import {
  OrderDecisionDetailsView,
  OrderDecisionDetailsView$zodSchema,
} from "./orderdecisiondetailsview.js";
import { OrderView, OrderView$zodSchema } from "./orderview.js";
import {
  ReviewTicketView,
  ReviewTicketView$zodSchema,
} from "./reviewticketview.js";
import {
  RiskModelExternalResultView,
  RiskModelExternalResultView$zodSchema,
} from "./riskmodelexternalresultview.js";
import {
  RiskReviewStatus,
  RiskReviewStatus$zodSchema,
} from "./riskreviewstatus.js";
import {
  TransactionIndemnificationDecision,
  TransactionIndemnificationDecision$zodSchema,
} from "./transactionindemnificationdecision.js";
import {
  TransactionIndemnificationReason,
  TransactionIndemnificationReason$zodSchema,
} from "./transactionindemnificationreason.js";
import {
  TransactionProcessor,
  TransactionProcessor$zodSchema,
} from "./transactionprocessor.js";
import {
  TransactionSplitsView,
  TransactionSplitsView$zodSchema,
} from "./transactionsplitsview.js";
import {
  TransactionStatus,
  TransactionStatus$zodSchema,
} from "./transactionstatus.js";
import {
  TransactionTimelineView,
  TransactionTimelineView$zodSchema,
} from "./transactiontimelineview.js";
import {
  TransactionType,
  TransactionType$zodSchema,
} from "./transactiontype.js";
import {
  TransactionView,
  TransactionView$zodSchema,
} from "./transactionview.js";

export const TransactionDetailsViewViewStatus$zodSchema = z.enum([
  "not_viewed",
  "viewed",
  "viewing",
]);

export type TransactionDetailsViewViewStatus = z.infer<
  typeof TransactionDetailsViewViewStatus$zodSchema
>;

export const AuthVerificationStatus$zodSchema = z.enum([
  "",
  "new",
]);

export type AuthVerificationStatus = z.infer<
  typeof AuthVerificationStatus$zodSchema
>;

export type TransactionRejectionDetails = {
  auth_rejection_details?: AuthRejectionDetailsView | undefined;
};

export const TransactionRejectionDetails$zodSchema: z.ZodType<
  TransactionRejectionDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  auth_rejection_details: AuthRejectionDetailsView$zodSchema.optional(),
});

/**
 * Determines why the transaction was voided.
 */
export const VoidCause$zodSchema = z.enum([
  "merchant_action",
  "shopify_sync",
  "paypal_sync",
  "amazon_pay_sync",
  "irreversible_reject",
  "auth_expire",
  "auth_verification_expired",
  "payment_method_updater",
]).describe("Determines why the transaction was voided.");

export type VoidCause = z.infer<typeof VoidCause$zodSchema>;

export type TransactionDetailsView = {
  amount?: AmountView | undefined;
  authorization?: CreditCardAuthorizationView | undefined;
  capture?: CaptureView | undefined;
  captures?: Array<CreditCardCaptureView> | undefined;
  credit?: CreditCardCreditView | undefined;
  date?: number | undefined;
  from_consumer?: ConsumerSelfView | undefined;
  from_credit_card?: CreditCardView | undefined;
  id?: string | undefined;
  indemnification_decision?: TransactionIndemnificationDecision | undefined;
  indemnification_reason?: TransactionIndemnificationReason | undefined;
  last4?: string | undefined;
  last_viewed_utc?: number | undefined;
  merchant_division?: MerchantDivisionSummaryView | undefined;
  merchant_order_number?: string | undefined;
  order_decision?: OrderDecisionDetailsView | undefined;
  processor?: TransactionProcessor | undefined;
  reference?: string | undefined;
  review_ticket?: ReviewTicketView | undefined;
  risk_insights?: RiskModelExternalResultView | undefined;
  risk_review_status?: RiskReviewStatus | undefined;
  risk_score?: number | undefined;
  splits?: Array<TransactionSplitsView> | undefined;
  status?: TransactionStatus | undefined;
  to_consumer?: ConsumerSelfView | undefined;
  to_credit_card?: CreditCardView | undefined;
  transaction_properties?: { [k: string]: string } | undefined;
  type?: TransactionType | undefined;
  void?: CreditCardVoidView | undefined;
  view_status?: TransactionDetailsViewViewStatus | undefined;
  address_change_request_metadata?:
    | AddressChangeRequestMetadataView
    | undefined;
  adjust_transactions?: Array<TransactionView> | undefined;
  auth_verification_status?: AuthVerificationStatus | undefined;
  authorization_id?: string | undefined;
  chargeback_details?: ChargebackDetailsView | undefined;
  custom_fields?: Array<CustomFieldFullResponseView> | undefined;
  customer_list_status?: CustomerListStatus | undefined;
  manual_disputes?: Array<ManualDisputeView> | undefined;
  order?: OrderView | undefined;
  refund_transaction_ids?: Array<string> | undefined;
  refund_transactions?: Array<TransactionView> | undefined;
  refunded_amount?: AmountView | undefined;
  source_transaction?: TransactionView | undefined;
  timeline?: Array<TransactionTimelineView> | undefined;
  transaction_rejection_details?: TransactionRejectionDetails | undefined;
  void_cause?: VoidCause | undefined;
};

export const TransactionDetailsView$zodSchema: z.ZodType<
  TransactionDetailsView,
  z.ZodTypeDef,
  unknown
> = z.object({
  address_change_request_metadata: AddressChangeRequestMetadataView$zodSchema
    .optional(),
  adjust_transactions: z.array(TransactionView$zodSchema).optional(),
  amount: AmountView$zodSchema.optional(),
  auth_verification_status: AuthVerificationStatus$zodSchema.optional(),
  authorization: CreditCardAuthorizationView$zodSchema.optional(),
  authorization_id: z.string().optional(),
  capture: CaptureView$zodSchema.optional(),
  captures: z.array(CreditCardCaptureView$zodSchema).optional(),
  chargeback_details: ChargebackDetailsView$zodSchema.optional(),
  credit: CreditCardCreditView$zodSchema.optional(),
  custom_fields: z.array(CustomFieldFullResponseView$zodSchema).optional(),
  customer_list_status: CustomerListStatus$zodSchema.optional(),
  date: z.number().int().optional(),
  from_consumer: ConsumerSelfView$zodSchema.optional(),
  from_credit_card: CreditCardView$zodSchema.optional(),
  id: z.string().optional(),
  indemnification_decision: TransactionIndemnificationDecision$zodSchema
    .optional(),
  indemnification_reason: TransactionIndemnificationReason$zodSchema.optional(),
  last4: z.string().optional(),
  last_viewed_utc: z.number().optional(),
  manual_disputes: z.array(ManualDisputeView$zodSchema).optional(),
  merchant_division: MerchantDivisionSummaryView$zodSchema.optional(),
  merchant_order_number: z.string().optional(),
  order: OrderView$zodSchema.optional(),
  order_decision: OrderDecisionDetailsView$zodSchema.optional(),
  processor: TransactionProcessor$zodSchema.optional(),
  reference: z.string().optional(),
  refund_transaction_ids: z.array(z.string()).optional(),
  refund_transactions: z.array(TransactionView$zodSchema).optional(),
  refunded_amount: AmountView$zodSchema.optional(),
  review_ticket: ReviewTicketView$zodSchema.optional(),
  risk_insights: RiskModelExternalResultView$zodSchema.optional(),
  risk_review_status: RiskReviewStatus$zodSchema.optional(),
  risk_score: z.number().int().optional(),
  source_transaction: TransactionView$zodSchema.optional(),
  splits: z.array(TransactionSplitsView$zodSchema).optional(),
  status: TransactionStatus$zodSchema.optional(),
  timeline: z.array(TransactionTimelineView$zodSchema).optional(),
  to_consumer: ConsumerSelfView$zodSchema.optional(),
  to_credit_card: CreditCardView$zodSchema.optional(),
  transaction_properties: z.record(z.string()).optional(),
  transaction_rejection_details: z.lazy(() =>
    TransactionRejectionDetails$zodSchema
  ).optional(),
  type: TransactionType$zodSchema.optional(),
  view_status: TransactionDetailsViewViewStatus$zodSchema.optional(),
  void: CreditCardVoidView$zodSchema.optional(),
  void_cause: VoidCause$zodSchema.optional(),
});
