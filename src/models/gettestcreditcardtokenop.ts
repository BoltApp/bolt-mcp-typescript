/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Successfully Fetched Credit Card Token
 */
export type GetTestCreditCardTokenResponseBody = {
  token?: string | undefined;
  expiry?: number | undefined;
  last4?: string | undefined;
  bin?: string | undefined;
  network?: string | undefined;
};

export const GetTestCreditCardTokenResponseBody$zodSchema: z.ZodType<
  GetTestCreditCardTokenResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  bin: z.string().optional(),
  expiry: z.number().int().optional(),
  last4: z.string().optional(),
  network: z.string().optional(),
  token: z.string().optional(),
}).describe("Successfully Fetched Credit Card Token");

export type GetTestCreditCardTokenResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  object?: GetTestCreditCardTokenResponseBody | undefined;
};

export const GetTestCreditCardTokenResponse$zodSchema: z.ZodType<
  GetTestCreditCardTokenResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
  object: z.lazy(() => GetTestCreditCardTokenResponseBody$zodSchema).optional(),
});
